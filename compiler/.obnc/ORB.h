/*GENERATED BY OBNC 0.16.1*/

#ifndef ORB_h
#define ORB_h

#include <obnc/Out.h>
#include <obnc/Files.h>
#include "ORS.h"
#include <obnc/OBNC.h>

#define ORB__versionkey_ 1

#define ORB__Head_ 0

#define ORB__Const_ 1

#define ORB__Var_ 2

#define ORB__Par_ 3

#define ORB__Fld_ 4

#define ORB__Typ_ 5

#define ORB__SProc_ 6

#define ORB__SFunc_ 7

#define ORB__Mod_ 8

#define ORB__Byte_ 1

#define ORB__Bool_ 2

#define ORB__Char_ 3

#define ORB__Int_ 4

#define ORB__Real_ 5

#define ORB__Set_ 6

#define ORB__Pointer_ 7

#define ORB__NilTyp_ 8

#define ORB__NoTyp_ 9

#define ORB__Proc_ 10

#define ORB__String_ 11

#define ORB__Array_ 12

#define ORB__Record_ 13

typedef struct ORB__ObjDesc_ *ORB__Object_;

typedef struct ORB__ModDesc_ *ORB__Module_;

typedef struct ORB__TypeDesc_ *ORB__Type_;

typedef struct ORB__ObjDesc_ {
	unsigned char class_, exno_;
	int expo_, rdo_;
	OBNC_INTEGER lev_;
	ORB__Object_ next_, dsc_;
	ORB__Type_ type_;
	ORS__Ident_ name_;
	OBNC_INTEGER val_;
} ORB__ObjDesc_;

struct ORB__ObjDesc_Heap {
	const OBNC_Td *td;
	struct ORB__ObjDesc_ fields;
};

#define ORB__ObjDesc_id compiler__ORB__ObjDesc_id
extern const int ORB__ObjDesc_id;

#define ORB__ObjDesc_ids compiler__ORB__ObjDesc_ids
extern const int *const ORB__ObjDesc_ids[1];

#define ORB__ObjDesc_td compiler__ORB__ObjDesc_td
extern const OBNC_Td ORB__ObjDesc_td;

typedef struct ORB__ModDesc_ {
	ORB__ObjDesc_ base;
	ORS__Ident_ orgname_;
} ORB__ModDesc_;

struct ORB__ModDesc_Heap {
	const OBNC_Td *td;
	struct ORB__ModDesc_ fields;
};

#define ORB__ModDesc_id compiler__ORB__ModDesc_id
extern const int ORB__ModDesc_id;

#define ORB__ModDesc_ids compiler__ORB__ModDesc_ids
extern const int *const ORB__ModDesc_ids[2];

#define ORB__ModDesc_td compiler__ORB__ModDesc_td
extern const OBNC_Td ORB__ModDesc_td;

typedef struct ORB__TypeDesc_ {
	OBNC_INTEGER form_, ref_, mno_;
	OBNC_INTEGER nofpar_;
	OBNC_INTEGER len_;
	ORB__Object_ dsc_, typobj_;
	ORB__Type_ base_;
	OBNC_INTEGER size_;
} ORB__TypeDesc_;

struct ORB__TypeDesc_Heap {
	const OBNC_Td *td;
	struct ORB__TypeDesc_ fields;
};

#define ORB__TypeDesc_id compiler__ORB__TypeDesc_id
extern const int ORB__TypeDesc_id;

#define ORB__TypeDesc_ids compiler__ORB__TypeDesc_ids
extern const int *const ORB__TypeDesc_ids[1];

#define ORB__TypeDesc_td compiler__ORB__TypeDesc_td
extern const OBNC_Td ORB__TypeDesc_td;

#define ORB__topScope_ compiler__ORB__topScope_
#define ORB__system_ compiler__ORB__system_
#define ORB__OUT2_ compiler__ORB__OUT2_
extern ORB__Object_ ORB__topScope_, ORB__system_, ORB__OUT2_;

#define ORB__byteType_ compiler__ORB__byteType_
#define ORB__boolType_ compiler__ORB__boolType_
#define ORB__charType_ compiler__ORB__charType_
extern ORB__Type_ ORB__byteType_, ORB__boolType_, ORB__charType_;

#define ORB__intType_ compiler__ORB__intType_
#define ORB__realType_ compiler__ORB__realType_
#define ORB__setType_ compiler__ORB__setType_
#define ORB__nilType_ compiler__ORB__nilType_
#define ORB__noType_ compiler__ORB__noType_
#define ORB__strType_ compiler__ORB__strType_
extern ORB__Type_ ORB__intType_, ORB__realType_, ORB__setType_, ORB__nilType_, ORB__noType_, ORB__strType_;

#define ORB__NewObj_ compiler__ORB__NewObj_
void ORB__NewObj_(ORB__Object_ *obj_, const ORS__Ident_ id_, OBNC_INTEGER class_);

#define ORB__thisObj_ compiler__ORB__thisObj_
ORB__Object_ ORB__thisObj_(void);

#define ORB__thisimport_ compiler__ORB__thisimport_
ORB__Object_ ORB__thisimport_(ORB__Object_ mod_);

#define ORB__thisfield_ compiler__ORB__thisfield_
ORB__Object_ ORB__thisfield_(ORB__Type_ rec_);

#define ORB__OpenScope_ compiler__ORB__OpenScope_
void ORB__OpenScope_(void);

#define ORB__CloseScope_ compiler__ORB__CloseScope_
void ORB__CloseScope_(void);

#define ORB__MakeFileName_ compiler__ORB__MakeFileName_
void ORB__MakeFileName_(ORS__Ident_ FName_, const char name_[], OBNC_INTEGER name_len, const char ext_[], OBNC_INTEGER ext_len);

#define ORB__Import_ compiler__ORB__Import_
void ORB__Import_(ORS__Ident_ modid_, ORS__Ident_ modid1_);

#define ORB__Export_ compiler__ORB__Export_
void ORB__Export_(ORS__Ident_ modid_, int *newSF_, OBNC_INTEGER *key_);

#define ORB__Init_ compiler__ORB__Init_
void ORB__Init_(void);

#define ORB__Init compiler__ORB__Init
void ORB__Init(void);

#endif
